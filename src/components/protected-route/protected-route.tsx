import React, { FC, ReactElement } from 'react';
import { useSelector } from 'react-redux';
import { Navigate, useLocation } from 'react-router-dom';
import { RootState } from '../../services/store';
import { Preloader } from '@ui';

type TProtectedRouteProps = {
  children: ReactElement;
  anonymous?: boolean;
};

export const ProtectedRoute: FC<TProtectedRouteProps> = ({
  children,
  anonymous = false
}) => {
  const location = useLocation();
  const { isAuthenticated, isAuthChecked } = useSelector(
    (state: RootState) => state.user
  );
  console.log('üöÄ ~ isAuthChecked:', isAuthChecked);

  // // –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  // if (!isAuthChecked) {
  //   return <Preloader />;
  // }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –º–∞—Ä—à—Ä—É—Ç –∞–Ω–æ–Ω–∏–º–Ω—ã–π, —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ "/"
  if (isAuthenticated && anonymous) {
    const from = (location.state as { from?: string })?.from || '/';
    return <Navigate to={from} />;
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –º–∞—Ä—à—Ä—É—Ç –∑–∞—â–∏—â–µ–Ω, —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ –ª–æ–≥–∏–Ω
  if (!isAuthenticated && !anonymous) {
    return <Navigate to='/login' replace state={{ from: location.pathname }} />;
  }

  // –†–µ–Ω–¥–µ—Ä–∏–º –¥–µ—Ç–µ–π, –µ—Å–ª–∏ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã
  return children;
};
